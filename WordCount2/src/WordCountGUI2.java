/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author marlon
 */
public class WordCountGUI2 extends javax.swing.JFrame {
    
    private String userText;
    private String searchChar;
    /**
     * Creates new form WordCountGUI2
     */
    public WordCountGUI2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        quitButton = new javax.swing.JButton();
        enterTextLabel = new javax.swing.JLabel();
        yourTextTextfield = new javax.swing.JTextField();
        yourCharLabel = new javax.swing.JLabel();
        yourCharTextfield = new javax.swing.JTextField();
        countLabel = new javax.swing.JLabel();
        countTextfield = new javax.swing.JTextField();
        countButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 48)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Character Counter");

        quitButton.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 48)); // NOI18N
        quitButton.setText("QUIT");
        quitButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        enterTextLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 36)); // NOI18N
        enterTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        enterTextLabel.setText("Write a String (Character, Word or Phrase)");

        yourTextTextfield.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 36)); // NOI18N
        yourTextTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                yourTextTextfieldFocusLost(evt);
            }
        });
        yourTextTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yourTextTextfieldActionPerformed(evt);
            }
        });

        yourCharLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 36)); // NOI18N
        yourCharLabel.setText("Select a Character to Count:");

        yourCharTextfield.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 48)); // NOI18N
        yourCharTextfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        yourCharTextfield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        yourCharTextfield.setOpaque(true);
        yourCharTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                yourCharTextfieldFocusLost(evt);
            }
        });
        yourCharTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yourCharTextfieldActionPerformed(evt);
            }
        });

        countLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 36)); // NOI18N
        countLabel.setText("Count:");

        countTextfield.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 48)); // NOI18N
        countTextfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        countTextfield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        countTextfield.setOpaque(true);

        countButton.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 48)); // NOI18N
        countButton.setText("Count");
        countButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        countButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yourTextTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(yourCharLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(countLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(countTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(yourCharTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(countButton, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enterTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(yourTextTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(yourCharTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(yourCharLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(countLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(countButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void yourTextTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yourTextTextfieldActionPerformed
        // TODO add your handling code here:
        userText = yourTextTextfield.getText();
    }//GEN-LAST:event_yourTextTextfieldActionPerformed

    private void countButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countButtonActionPerformed
        // TODO add your handling code here:
        int count = countCharacters(userText, searchChar);
        countTextfield.setText(count + "");
    }//GEN-LAST:event_countButtonActionPerformed

    private void yourCharTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yourCharTextfieldActionPerformed
        // TODO add your handling code here:
        searchChar = yourCharTextfield.getText();
    }//GEN-LAST:event_yourCharTextfieldActionPerformed

    private void yourTextTextfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yourTextTextfieldFocusLost
        // TODO add your handling code here:
        userText = yourTextTextfield.getText();
    }//GEN-LAST:event_yourTextTextfieldFocusLost

    private void yourCharTextfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yourCharTextfieldFocusLost
        // TODO add your handling code here:
        searchChar = yourCharTextfield.getText();
    }//GEN-LAST:event_yourCharTextfieldFocusLost
public int countCharacters(String text, String charToFind){
	if (text.length() == 0)
        {
                return 0;
        }
        else 
        {
                String newText = text.substring(0, text.length() - 1);
                String comparisonChar = text.substring(text.length() - 1,text.length());
                if (comparisonChar.equals(charToFind))
                {
                    return 1 + countCharacters(newText, charToFind);
                } else
                {
                    return countCharacters(newText, charToFind);
                }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WordCountGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WordCountGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WordCountGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WordCountGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WordCountGUI2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton countButton;
    public javax.swing.JLabel countLabel;
    public javax.swing.JTextField countTextfield;
    public javax.swing.JLabel enterTextLabel;
    public javax.swing.JButton quitButton;
    public javax.swing.JLabel titleLabel;
    public javax.swing.JLabel yourCharLabel;
    public javax.swing.JTextField yourCharTextfield;
    public javax.swing.JTextField yourTextTextfield;
    // End of variables declaration//GEN-END:variables
}
